$(document).ready(function() {

  function filterProposalColumnParams ( i ) {
    $('#proposals-table').DataTable().column( i ).search(
      $('#col'+i+'filter').val(), false, true, true
    );
    $('#proposals-table').DataTable().draw();
  };

  $.fn.dataTable.ext.buttons.proposal_reset_col_vis_and_reorder = {
    text: '<span class="text-primary fa fa-retweet"></span>',
    //titleAttr: 'Przywróć domyślne ustawienia kolumn',
    className: 'btn btn-sm btn-default',
    action: function ( e, dt, button, config ) {
      // revert colVis  // dt.columns(config.show).visible(true);
      // 0-ID 
      dt.columns(':gt(1)').visible(true);

      dt.colReorder.reset();
      dt.state.clear();
      dt.search('');
      dt.draw();
    }  
  };

  $.fn.dataTable.ext.buttons.proposal_button_filter_by_columns = {
    //text: 'Filtr',
    text: '<span class="fa fa-filter"></span>',
    //titleAttr: 'Filtrowanie po kolumnach',
    className: 'btn btn-sm btn-default',
    init: function ( dt, node, config ) {
      // button 4 na starcie wylaczony
      dt.button( 4 ).active( false );
      $('#proposals-table tfoot input').val('').keyup();
      $('#proposals-table tfoot select').val('').keyup();
      $(".dataTables_filter").show();
    },
    action: function ( e, dt, node, config ) {
      if ($('#proposals-table').DataTable().tables().footer().to$().css('display') === 'none') {
        $('#proposals-table').DataTable().tables().footer().to$().css('display', 'table-row-group');
        // dt.button( 4 ).text('<span class="fa fa-filter"></span> Filtr...');
        //dt.button( 4 ).text('<span class="fa fa-filter"></span>');
        dt.button( 4 ).active( true );
        $($.fn.dataTable.tables(true)).DataTable().search("").draw();
        $(".dataTables_filter").hide();
      } else {
        $('#proposals-table').DataTable().tables().footer().to$().css('display', 'none');
        //dt.button( 4 ).text('<span class="fa fa-filter"></span>');
        dt.button( 4 ).active( false );
        // Reset Column filtering
        $('#proposals-table tfoot input').val('').keyup();
        $('#proposals-table tfoot select').val('').keyup();
        $(".dataTables_filter").show();
      }

      $($.fn.dataTable.tables(true)).DataTable()
        .columns.adjust()
        .responsive.recalc();
    }
  };


  var oProposaltable = $('#proposals-table').DataTable({
    dom: '<"top" <"row" <"col-sm-9" <"pull-left"l><"pull-left"B> > <"col-sm-3 pull-right"f> > > rt <"bottom"ip><"clear">',
    buttons: [
      'proposal_reset_col_vis_and_reorder',
      {
        extend:    'colvis',
        text:      '<span class="text-primary fa fa-columns"></span>',
        // titleAttr: 'Pokaż/ukryj kolumny',
        className: 'btn btn-sm btn-default',
        columns:   ':gt(1)' //exclude cols from list
      }, 
      {
        extend:    'copy',
        text:      '<span class="text-primary fa fa-clipboard"></span>',
        // titleAttr: 'Kopiuj do schowka',
        className: 'btn btn-sm btn-default'
      },
      {
        extend:    'csv',
        text:      '<span class="text-primary fa fa-file-csv"></span>',
        // titleAttr: 'Kopiuj do CSV',
        className: 'btn btn-sm btn-default'
      },
      'proposal_button_filter_by_columns'
    ],
    responsive: true,
    processing: true,
    serverSide: true,
    deferRender: true,
    searchDelay: 500,
    stateSave: true,
    stateDuration: 60 * 60 * 24 * 7,
    colReorder: {
      fixedColumnsLeft: 2
    },
    ajax: { 
      url: $('#proposals-table').data('source'),
      type: "POST",
      dataType: 'json',
      data: function(d){
      },
      error: function (jqXHR, exception) {
        console.log(jqXHR);
        if (jqXHR.status == 401) {
          window.location.reload();
        } else {
          getErrorMessage(jqXHR, exception);
        }
      }
    },
    pagingType: "full_numbers",
    lengthMenu: [[5, 10, 15, 25, 50, 100, -1], [5, 10, 15, 25, 50, 100, "Wszystkie"]],
    columns: [
      { "data": "id", "visible": false },
      { "data": "insertion_date" }, 
      { "data": "proposal_type", 
        fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
          // sData - wartosc celi, oData - wiersza
          if ( sData == 'wpis do rejestru' ) {
            $(nTd).addClass('datatable-cell-proposal-type-registration');
          }
          else if ( sData == 'wykreślenie z rejestru' ) {
            $(nTd).addClass('datatable-cell-proposal-type-deletion');
          }
          else if ( sData == 'zmiana wpisu w rejestrze' ) {
            $(nTd).addClass('datatable-cell-proposal-type-change');
          }
        }
      },
      { "data": "proposal_status", 
        fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
          // sData - wartosc celi, oData - wiersza
          if ( sData == 'w trakcie rozpatrywania' ) {
            $(nTd).addClass('datatable-cell-proposal-status-pending');
          }
          else if ( sData == 'zaakceptowany' ) {
            $(nTd).addClass('datatable-cell-proposal-status-approved');
          }
          else if ( sData == 'odrzucony' ) {
            $(nTd).addClass('datatable-cell-proposal-status-rejected');
          }
          else if ( sData == 'zamknięty' ) {
            $(nTd).addClass('datatable-cell-proposal-status-closed');
          }
          else if ( sData == 'anulowany' ) {
            $(nTd).addClass('datatable-cell-proposal-status-annuled');
          }
        }
      },
      { "data": "register" }, 
      { "data": "organization" }, 
      { "data": "nip" },
      { "data": "jointly_identifiers" }, 
      { "data": "jointly_addresses" }, 
      { "data": "note" },
      // { "data": "author" }
      // { "data": "flat", 
      //   "sortable": false }
    ],
    order: [[ 1, "desc" ]],
    language: {
      url: $('#proposals-table').data('locale_url')
    },
    initComplete: function(settings, json) {
      oProposaltable.button(0).node().attr( 'title', oProposaltable.i18n( 'buttons.revertColVisColReorder' ) );
      oProposaltable.button(1).node().attr( 'title', oProposaltable.i18n( 'buttons.colvis' ) );
      oProposaltable.button(2).node().attr( 'title', oProposaltable.i18n( 'buttons.copy' ) );
      oProposaltable.button(3).node().attr( 'title', oProposaltable.i18n( 'buttons.csv' ) );
      oProposaltable.button(4).node().attr( 'title', oProposaltable.i18n( 'buttons.myFilterByColumns' ) );
    },
    stateSaveCallback: function(settings,data) {
      localStorage.setItem( 'registry_dt_proposals-table_/en-pl/proposals', JSON.stringify(data) )
    },
    stateLoadCallback: function(settings) {
      return JSON.parse( localStorage.getItem( 'registry_dt_proposals-table_/en-pl/proposals' ) )
    }
  });


  $('input.column_filter').on( 'keyup click', function () {
    filterProposalColumnParams( $(this).attr('data-column') );
  });

  $('select.column_filter').on( 'keyup click', function () {
    filterProposalColumnParams( $(this).attr('data-column') );
  });


});