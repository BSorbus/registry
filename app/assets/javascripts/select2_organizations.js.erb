$(document).ready(function() {

  function organizationFormatResult(item, container, query, escapeMarkup) {

    var addresses = "";
    item.data_obj.addresses.forEach (function(el, index) {
      addresses = addresses + el.address_type.name + ": [ " + el.province_name + ", " + el.city_name + ", " + el.street_name + " " + el.address_house + " " + el.address_number + " ]<br>";
    }); 
    addresses = markMatch(addresses, query.term);

    var identifiers = "";
    item.data_obj.feature_identifiers.forEach (function(el, index) {
      identifiers = identifiers + el.feature_type.name + ": " + el.feature_value;
      if (index + 1 < item.data_obj.feature_identifiers.length) {
        identifiers = identifiers + ", ";
      }
    }); 
    identifiers = markMatch(identifiers, query.term);


    if (item.id) {
      var organizationFullname = markMatch(item.data_obj.fullname, query.term);
      var organizationNip  = markMatch(item.data_obj.nip, query.term);
      // var organizationIdentifiers = markMatch(item.data_obj.jointly_identifiers.replaceAll('</strong>:<br>',': ').replaceAll('<strong>',' ').replaceAll('<br>',', '), query.term );

      return  organizationFullname          +  "<br>" + 
              "NIP: " + organizationNip     +  "<div class='pull-right'>&nbsp[ " + identifiers + " ]</div><br>" +
              addresses + "</div>";

    } else {
      return "";
    }
  };

  function organizationFormatSelection(item) {
    if (item.id) {
      return  item.data_obj.fullname + '&nbsp&nbsp<span class="pull-right">[ NIP:&nbsp' + item.data_obj.nip + '&nbsp]</span>';
    } else {
      return '';
    }
  };


  $('.select2organization').select2({
    // minimumInputLength: 1,
    allowClear: false,
    ajax: {
      url: function() {
        return "/" + this.attr('data-locale') + "/organizations/select2_index.json"
      }, 
      dataType: 'json',
      quietMillis: 250,
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 10,
          page: page
        };
      },
      results: function(data, page) {
        var more = (page * 10) < data.meta.total_count;
        var organizations = $.map(data.organizations, function(organization, i) {
          // return { id: organization.id, text: organization.fullname };
          return { data_obj: organization, id: organization.id };
        });
        return { results: organizations, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/" + element.context.attributes['data-locale'].value + "/organizations/"+id+".json", function(data_from_json) {
          if(data_from_json)
            // callback({ id: data_from_json.id, text: data_from_json.fullname });
            callback( { data_obj: data_from_json, id: data_from_json.id } );
        });
      }
    },
    formatResult: organizationFormatResult, // omitted for brevity, see the source of this page
    formatSelection: organizationFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  });


});